---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-selector
spec:
  replicas: 2
  selector:
    matchLabels:
      app: node-selector
  template:
    metadata:
      labels:
        app: node-selector
    spec:
      # Safe, broadly available label so demo runs on Minikube/OrbStack
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
        - name: web
          emptyDir: {}
      initContainers:
        - name: init-web
          image: busybox:1.36
          command: ["sh", "-c"]
          args:
            - |
              cat >/work/index.html <<'EOF'
              <!doctype html>
              <html>
                <head>
                  <meta charset="utf-8" />
                  <title>Node Selector Demo</title>
                  <style>body{font-family:system-ui,sans-serif;padding:20px}</style>
                </head>
                <body>
                  <h1>Node Selector: kubernetes.io/os=linux</h1>
                  <p>This Deployment targets nodes with the label <code>kubernetes.io/os=linux</code>.</p>
                  <p>Pod: ${POD_NAME}</p>
                  <p>Node: ${NODE_NAME}</p>
                </body>
              </html>
              EOF
          volumeMounts:
            - name: web
              mountPath: /work
          env:
            - name: POD_NAME
              valueFrom: {fieldRef: {fieldPath: metadata.name}}
            - name: NODE_NAME
              valueFrom: {fieldRef: {fieldPath: spec.nodeName}}
      containers:
        - name: web
          image: nginx:1.25-alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - name: web
              mountPath: /usr/share/nginx/html
