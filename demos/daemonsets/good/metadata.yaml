---
name: DaemonSet - Working
description: |
  Concise demo of a DaemonSet scheduling exactly one pod per node. Each pod runs
  nginx:1.25-alpine and serves per-node HTML generated by an initContainer (busybox)
  into an emptyDir volume mounted at /usr/share/nginx/html. A safe nodeAffinity
  (kubernetes.io/os In [linux]) is included to illustrate scheduling constraints
  compatible with OrbStack and Minikube.
source: https://github.com/anveshmuppeda/kubernetes/tree/main/hands-on-tasks/daemonset-with-node-affinity
tags: [daemonset, scheduling, nodes, nginx, networking, good]
objectives:
  - Apply kustomization and observe one nginx pod scheduled on each Linux node.
  - Demonstrate safe node affinity using kubernetes.io/os In [linux].
  - Verify per-node web content written by an initContainer into emptyDir.
  - Expose pods via ClusterIP Service and Nginx Ingress at daemonsets-good.k8s.orb.local or daemonsets-good.k8s.mk.local.
observations:
  - kubectl get ds shows desired=ready=number of Linux nodes in the cluster.
  - Each pod label app=daemonsets; Service selects these pods on port 80.
  - HTML page displays both node and pod identity (NODE_NAME and POD_NAME).
  - RollingUpdate replaces pods gradually across nodes on changes to the DaemonSet.
  - Ingress with TLS secret demo-tls routes HTTPS traffic to Service daemonsets:80.
