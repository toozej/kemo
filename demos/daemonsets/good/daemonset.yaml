---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: daemonsets
  labels:
    app: daemonsets
spec:
  selector:
    matchLabels:
      app: daemonsets
  template:
    metadata:
      labels:
        app: daemonsets
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
      volumes:
        - name: web
          emptyDir: {}
      initContainers:
        - name: init-web
          image: busybox:1.36
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - sh
            - -c
            - |
              cat <<'HTML' >/work/index.html
              <!doctype html>
              <html>
              <head><meta charset="utf-8"><title>DaemonSet demo</title></head>
              <body>
              <h1>DaemonSet - per node</h1>
              <p>Node: ${NODE_NAME}</p>
              <p>Pod: ${POD_NAME}</p>
              </body>
              </html>
              HTML
          volumeMounts:
            - name: web
              mountPath: /work
      containers:
        - name: nginx
          image: nginx:1.25-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
          volumeMounts:
            - name: web
              mountPath: /usr/share/nginx/html
          resources:
            requests:
              cpu: 25m
              memory: 32Mi
            limits:
              cpu: 100m
              memory: 96Mi
      terminationGracePeriodSeconds: 10
  updateStrategy:
    type: RollingUpdate
